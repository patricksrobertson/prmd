<%-
  path = build_link_path(schema, link)
  link_schema_properties_template = Prmd::Template::load('link_schema_properties.erb', options[:template])
-%>
### <%= title %> <%= link['title'] %>
<%= link['description'] %>

```
<%= link['method'] %> <%= path %>
```

<%- if link.has_key?('schema') && link['schema'].has_key?('properties') %>
  <%-
    required, optional = link['schema']['properties'].partition do |k, v|
      (link['schema']['required'] || []).include?(k)
    end.map { |partition| Hash[partition] }
  %>
  <%- unless required.empty? %>
#### Required Parameters
<%= Erubis::Eruby.new(link_schema_properties_template).result(params: required, schema: schema, options: options) %>

  <%- end %>
  <%- unless optional.empty? %>
#### Optional Parameters
<%= Erubis::Eruby.new(link_schema_properties_template).result(params: optional, schema: schema, options: options) %>
  <%- end %>
<%- end %>

#### Curl Example
<%=
  Prmd::Template::render(File.join('schemata', 'link_curl_example.erb'), File.dirname(options[:template]), {
    options:         options,
    resource:        resource,
    schema:          schema,
    schemata:        schemata,
    link:            link,
    path:            path
  })
%>

#### Response Example
```
HTTP/1.1 <%= case link['rel']
  when 'create'
    '201 Created'
  when 'empty'
    '202 Accepted'
  else
    '200 OK'
  end %>
```
```json
  <%- if link['rel'] == 'empty' %>
  <%- elsif link.has_key?('targetSchema') && link['targetSchema'].has_key?('properties') %>
<%= JSON.pretty_generate(schema.schema_example(link['targetSchema'])) %>
  <%- elsif link['rel'] == 'instances' %>
<%= JSON.pretty_generate({"#{resource}s" => [schema.schemata_example(resource)]}) %>
  <%- else %>
<%= JSON.pretty_generate({resource => schema.schemata_example(resource)}) %>
  <%- end %>
```
